*********
AI-monkey
*********

Модель нейронной сети теперь полность реализована на `TensorFlow <https://www.tensorflow.org>`_.
Все утилиты представляют собой консольные приложения.

Используется интерпретатор ``Python 3.6``. Установка необходимых пакетов выполняется командой

.. code::

    pip install -r requirements.txt

Модуль состоит из нескольких частей:

+++++++++
Retriever
+++++++++

- ``retriever.py`` - утилита извлекает данные (распределение часов и баллов) из отчетов и сохраняет в указаный ``*.csv`` файл.

**Пример**

.. code::

    python ai-monkey/retriever.py c:/container/ --out=d:/data.csv

Первый аргумент - путь к директории с ``*.xlsx`` журналами отчетов. Второй аргумент ``--out`` можно опустить,
тогда данные будут сохранены в месте запуска утилиты в файл ``data.csv``.


+++++++
Trainer
+++++++


- ``train.py`` - утилита, которая обучает нейронную сеть. По-сути, для этой утилиты есть специальный файл ``config.py``
с нужными конфигурациями обучения.

**Пример**

.. code::

    python ai-monkey/train.py


++++
Calc
++++

- ``calc.py`` - простая утилита, чтобы проверить единичное распределение баллов, при заданом распределении часов.

**Пример**

.. code::

    python ai-monkey/calc.py --dist=10 12 0 0 3 17

Аргумент ``--dist`` представляет распределение часов. В примере распределение имеет следующее значение:
``[Лекции Практика Лабораторные Семинары ИндивидуальныеЗанятия СамостоятельныеЗанятия]``.


+++++++++
AI-monkey
+++++++++

- ``ai-monkey`` - основная утилита, которая расчитывает распределение баллов для заданой директории с отчетами.
Полученые распределения сохраняются в отдельный файл.

.. code::

    python ai-monkey c:/container/ --out=d:/data.xlsx

Первый аргумент - путь к директории с ``*.xlsx`` журналами отчетов. Второй аргумент ``--out`` можно опустить,
тогда данные будут сохранены в месте запуска утилиты в файл ``data.xlsx``.


++++++++++++++
Configurations
++++++++++++++

Конфигурации для обучения и использование нейронной сети находятся в файле ``config.py``:

- ``BOARD_EVENT_PATH`` - путь к временным файлам `TensorBoard <https://www.tensorflow.org/programmers_guide/summaries_and_tensorboard>`_ для визуализации обучения;
- ``TRAIN_DATA_PATH`` - путь к ``*.csv`` файлу, который содержим распределения часов и баллов;
- ``MODEL_PATH`` - путь директории, в которую будет сохраняться натренированная модель (нейронная сеть);
- ``VALIDATION_PROPORTION`` - доля данных, которые необходимо отсеять для валидационной выборки;
- ``LEARN_RATE`` - коефициент скорости обучения;
- ``LEARNING_DECAY`` - коефициент уменьшения скорости обучения (в текущей модели, уменшается по экспоненте);
- ``WEIGHT_DECAY`` - коефициент регуляризации Тихонова;
- ``EPOCHS`` - количество эпох обучения;
- ``BATCH_SIZE`` - количество элементов в подвыборке (mini-batch) для обучения на протяжении 1 эпохи;
- ``MULTIPLIER`` - используется только в ``calc.py``. Число на которое умножается каждая оценка в получившейся выборке.
